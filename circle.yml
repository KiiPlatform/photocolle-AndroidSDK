machine:
  environment:
    ADB_INSTALL_TIMEOUT: 5

dependencies:
  pre:
    - echo y | android update sdk --no-ui --filter platform
    - echo y | android update sdk --no-ui --all --filter build-tools-22.0.1
    - echo no | android create avd --force --name my-android-17 --target android-17 --sdcard 128M
    - >
      cat ~/.android/avd/my-android-17.avd/config.ini |
      sed -e 's/^\(vm\.heapSize=\)[0-9]*$/\1128/' |
      sed -e 's/^\(hw\.ramSize=\)[0-9]*$/\1512/' >
      ~/.android/avd/my-android-17.avd/config2.ini
    - mv ~/.android/avd/my-android-17.avd/config2.ini ~/.android/avd/my-android-17.avd/config.ini

checkout:
  post:
    # clone internal-tools
    - git clone git@github.com:KiiCorp/internal-tools.git

test:
  pre:
    # build sdk
    - ./gradlew debugCompile
    # save lint reports of sdk
    - mkdir $CIRCLE_ARTIFACTS/lintReports; cp -fr photocolle-sdk/sdk/build/outputs/lint-results* $CIRCLE_ARTIFACTS/lintReports/
    # generate sdk aar file
    - cp -fr photocolle-sdk/sdk/build/outputs/aar/* $CIRCLE_ARTIFACTS
    # generate java doc
    - ./gradlew photocolle-sdk:sdk:javadoc
    - cp -fr photocolle-sdk/sdk/build/docs/javadoc $CIRCLE_ARTIFACTS/javadoc/

  override:
    # start the emulator
    - emulator -memory 512 -avd my-android-17 -no-audio -no-window:
        background: true
        parallel: true
    # wait for it to have booted
    - circle-android wait-for-boot
    # run small tests  against the emulator.
    - ./gradlew photocolle-sdk:sdk:unitTest
    # copy the test results to the test results directory.
    - cp -r junit-results/com.kii.sdk.photocolle-TEST.xml $CIRCLE_TEST_REPORTS/small_tests.xml
    # copy the logcat file to test results directory.
    - adb logcat -d > logcat.txt
    - mv logcat.txt $CIRCLE_ARTIFACTS/logcat_small_test.txt

  post:
    - >
      if [ "UPLOAD_SDK" == "true" ]; then
        bash circleci_scripts/sdk_upload.sh
      fi
